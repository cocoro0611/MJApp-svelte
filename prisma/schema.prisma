generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator kysely {
  provider = "prisma-kysely"
  output   = ".././src/lib/models"
  fileName = "types.ts"
}

model User {
  id        String     @id @default(uuid()) @db.Uuid
  name      String
  icon      String
  isDefault Boolean
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  scores    Score[]
  chips     Chip[]
  rooms     RoomUser[]
}

model Room {
  id           String      @id @default(uuid()) @db.Uuid
  name         String
  initialPoint Int
  returnPoint  Int
  bonusPoint   String
  scoreRate    Int
  chipRate     Int
  gameAmount   Int
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())
  users        RoomUser[]
  scores       RoomScore[]
  chips        RoomChip[]
}

model Score {
  id        String      @id @default(uuid()) @db.Uuid
  input     Int
  score     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id])
  userId    String      @db.Uuid
  rooms     RoomScore[]
}

model Chip {
  id        String     @id @default(uuid()) @db.Uuid
  input     Int
  chip      Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @db.Uuid
  rooms     RoomChip[]
}

model RoomUser {
  rooms     Room     @relation(fields: [roomId], references: [id])
  users     User     @relation(fields: [userId], references: [id])
  roomId    String   @db.Uuid
  userId    String   @db.Uuid
  userOrder Int
  createdAt DateTime @default(now())

  @@id([roomId, userId])
  @@unique([roomId, userId])
}

model RoomScore {
  rooms      Room     @relation(fields: [roomId], references: [id])
  scores     Score    @relation(fields: [scoreId], references: [id])
  roomId     String   @db.Uuid
  scoreId    String   @db.Uuid
  scoreOrder Int
  createdAt  DateTime @default(now())

  @@id([roomId, scoreId])
  @@unique([roomId, scoreId])
}

model RoomChip {
  rooms     Room     @relation(fields: [roomId], references: [id])
  chips     Chip     @relation(fields: [chipId], references: [id])
  roomId    String   @db.Uuid
  chipId    String   @db.Uuid
  chipOrder Int
  createdAt DateTime @default(now())

  @@id([roomId, chipId])
  @@unique([roomId, chipId])
}
